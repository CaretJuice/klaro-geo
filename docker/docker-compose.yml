services:
  wordpress_test:
    build:
      context: .
      dockerfile: Dockerfile.test
    entrypoint: ["/usr/local/bin/docker-entrypoint-test.sh"]
    user: "root:root"
    command: ["vendor/bin/phpunit", "--configuration", "/var/www/html/wp-content/plugins/klaro-geo/phpunit.xml"]
    tty: true
    stdin_open: true
    volumes:
      - type: bind
        source: ${PWD}/..
        target: /var/www/html/wp-content/plugins/klaro-geo
        consistency: delegated
      - type: bind
        source: ${PWD}/../tests
        target: /var/www/html/wp-content/plugins/klaro-geo/tests
        consistency: delegated
      - type: bind
        source: ${PWD}/logs
        target: /var/www/html/wp-content/plugins/klaro-geo/docker/logs/
        consistency: delegated
      - ./php.ini:/usr/local/etc/php/php.ini
      # Create a named volume for vendor to persist between runs
      - klaro_vendor:/var/www/html/wp-content/plugins/klaro-geo/vendor
    environment:
      WORDPRESS_DB_HOST: db_test
      WORDPRESS_DB_NAME: wordpress_test
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      PHP_MEMORY_LIMIT: 256M
      WP_CLI_MEMORY_LIMIT: 512M
      WORDPRESS_TABLE_PREFIX: wp_
    depends_on:
      db_test:
        condition: service_healthy


  wordpress:
    image: wordpress:latest
    ports:
      - "8000:80"
    user: "root:root"
    restart: unless-stopped
    tty: true
    stdin_open: true
    # Use a dedicated entrypoint script
    entrypoint: ["/bin/bash", "-c", "chmod +x /usr/local/bin/docker-entrypoint-wordpress.sh && /usr/local/bin/docker-entrypoint-wordpress.sh"]
    volumes:
      - wordpress_data:/var/www/html
      - type: bind
        source: ${PWD}/..
        target: /var/www/html/wp-content/plugins/klaro-geo
        consistency: delegated
      - type: bind
        source: ${PWD}/logs
        target: /var/www/html/wp-content/plugins/klaro-geo/docker/logs/
        consistency: delegated
      - type: bind
        source: ${PWD}/docker-entrypoint-wordpress.sh
        target: /usr/local/bin/docker-entrypoint-wordpress.sh
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_DEBUG: 1
      # Increase PHP memory limits
      PHP_MEMORY_LIMIT: 512M
      WP_MEMORY_LIMIT: 512M
      WP_MAX_MEMORY_LIMIT: 512M
      WORDPRESS_CONFIG_EXTRA: |
        define( 'WP_DEBUG', true );
        define( 'WP_DEBUG_LOG', '/var/www/html/wp-content/plugins/klaro-geo/docker/logs/debug_dev.log' );
        define( 'WP_DEBUG_DISPLAY', false );
        define( 'WP_MEMORY_LIMIT', '512M' );
        define( 'WP_MAX_MEMORY_LIMIT', '512M' );
    depends_on:
      db:
        condition: service_healthy
    # Add resource limits to prevent OOM issues
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    # Add healthcheck to monitor container status
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/wp-admin/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s


  db_test:
    image: mysql:5.7
    platform: linux/amd64
    environment:
      MYSQL_ROOT_PASSWORD: somewordpress
      MYSQL_DATABASE: wordpress_test
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress
    volumes:
      - db_test_data:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-psomewordpress"]
      timeout: 5s
      retries: 10

  db:
    image: mysql:5.7
    platform: linux/amd64
    volumes:
      - db_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: somewordpress
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-psomewordpress"]
      timeout: 5s
      retries: 10
    command: --default-authentication-plugin=mysql_native_password


volumes:
  wordpress_test_data:
  wordpress_data:
  db_data:
  db_test_data:
  klaro_vendor: